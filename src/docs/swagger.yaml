openapi: 3.0.0
info:
  version: "1.0.0"
  title: LoginLogoutDemoApi
  description: API for my small pet project called LoginLogoutDemo
  contact:
    name: Dmitriy
servers:
  - url: 'http://localhost:3000'
    description: Local development server
tags:
  - name: Users
    description: User management and authentication
paths:
  /api/users/auth/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        description: Username and password for new user
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: dmitriy123
                password:
                  type: string
                  example: MySecretPassword
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User created
                  userId:
                    type: string
                    format: uuid
                    example: 550e8400-e29b-41d4-a716-446655440000
        '400':
          description: Missing username or password
        '409':
          description: Username already exists
        '500':
          description: Internal server error

  /api/users/auth/login:
    post:
      summary: Login user and get JWT token
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: dmitriy123
                password:
                  type: string
                  example: MySecretPassword
      responses:
        '200':
          description: Successful login, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Missing username or password
        '401':
          description: Invalid username or password
        '500':
          description: Internal server error

  /api/users/auth/logout:
    post:
      summary: Logout current session
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Logged out successfully
        '401':
          description: Invalid or expired token
        '500':
          description: Internal server error

  /api/users/auth/refresh:
    post:
      summary: Refresh current session token
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns a new JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          description: Invalid or expired token
        '500':
          description: Internal server error

  /api/users/auth/sessions:
    get:
      summary: Get all active sessions for current user
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of sessions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sessionId:
                      type: string
                      example: abc123-uuid
                    userId:
                      type: string
                      example: 550e8400-e29b-41d4-a716-446655440000
        '401':
          description: Invalid or expired token
        '500':
          description: Internal server error

  /api/users:
    get:
      summary: Get all users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 550e8400-e29b-41d4-a716-446655440000
                    username:
                      type: string
                      example: dmitriy123
        '401':
          description: Invalid or expired token
        '500':
          description: Internal server error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
