openapi: 3.0.0
servers:
  - url: http://localhost:3000
    description: API for my small pet project called LoginLogoutDemo
  - url: http://localhost:3000
    description: Website for my project
info:
  version: "1.0.0"
  title: LoginLogoutDemoApi
  description: API for my small pet project called LoginLogoutDemo
  contact:
    name: Dmitriy
paths:
  /api/users/register:
    post:
      summary: Register a new user
      tags:
        - Users
      requestBody:
        description: Username and password for new user
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "dmitriy123"
                password:
                  type: string
                  example: "MySecretPassword"
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User created"
                  userId:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Username already exists"
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Username and password required"

  /api/users/login:
    post:
      summary: Login user and get JWT token
      tags:
        - Users
      requestBody:
        description: Username and password for login
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: "dmitriy123"
                password:
                  type: string
                  example: "MySecretPassword"
      responses:
        '200':
          description: Successful login, returns JWT token
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid username or password"
        '400':
          description: Missing username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Username and password required"